---
- block:

    - name: "Install the Pulp undeclared {{ ansible_facts.pkg_mgr }} package dependencies"
      package:
        name: "{{ pulp_pkg_undeclared_deps }}"
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install pulpcore via {{ ansible_facts.pkg_mgr }} packages"
      package:
        name: "{{ pulp_pkg_pulpcore_name }}"
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install Pulp plugins via {{ ansible_facts.pkg_mgr }} packages"
      package:
        name: '{{ pulp_pkg_name_prefix }}{{ __pulp_common_package.key }}'
        state: "{{ pulp_pkg_upgrade_all | ternary('latest','present') }}"
      # We use pulp_install_plugins rather than pulp_install_plugins_normalized
      # so that users can specify package names with underscores if distros
      # require it.
      loop: '{{ pulp_install_plugins | dict2items }}'
      loop_control:
        loop_var: __pulp_common_package
      when:
        - __pulp_common_package.value.pkg_name is undefined
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install Pulp plugins (with overriden names) via {{ ansible_facts.pkg_mgr }}"
      package:
        name: '{{ __pulp_common_package.value.pkg_name }}'
        state: present
      loop: '{{ pulp_install_plugins | dict2items }}'
      loop_control:
        loop_var: __pulp_common_package
      when:
        - __pulp_common_package.value.pkg_name is defined
      notify:
        - Collect static content
        - Restart all Pulp services

    - name: "Install gunicorn via {{ ansible_facts.pkg_mgr }} packages"
      package:
        name: python3-gunicorn
        state: present

  become: true
...
